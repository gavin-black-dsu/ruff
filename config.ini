[Trial]
; Readable name to distinguish the test (graphs/directories)
name = Default

[Fuzzing]
; Which fuzzer to use
fuzzer = Random
; Maximum size in bytes of samples
max_sample_size = 500
; Final number of samples to produce for further mutation
; For example 100 samples * 10 variants * 10 steps = 10,000 new samples
number_of_samples = 100 
; How many different starting points for each of the above samples
; Match this with the number of cores for parallel processing
number_of_variants = 10 
; Number of 1-change steps to go through for each variant
number_of_steps = 10

[Paths]
; Stores the results from resource monitoring
directory = ./resource_results 
; Where to store dataframes that have been updated
cleaned_dir = "./cleaned_resources"
; Directory for storing corpora used in simulations
corpora_dir = ./corpora 
; Where to store the mutated samples
fuzz_dir = ./fuzz_corpora 

[Settings]
; Maximum amount of error messages considered too many
max_errors = 35 
; Number of Monte-Carlo simulations to run
n_simulations = 1000 
; Cutoff for the null hypothesis significance testing
ks_a = 0.05 
; Number of distances to evaluate for anomaly detection
k = 100 
; Whether to limit the number of Atheris samples
limit_atheris = True 
; The number of Atheris samples to take if limited
atheris_entries = 10000 
; The batch size for generating embeddings
batch_size = 512

[Score Coefficients]
; Weight for input embedding anomaly
alpha_embed = 0 
; Weight for scaled resource values
beta_scaled = 1 
; Weight for quantized resource anomaly
gamma_anom = 1

[Scaling]
; Scaling factor for output size in bytes
Output_Size_B = 1 
; Scaling factor for output entropy
Output_Entropy_bits_per_symbol = 1 
; Scaling factor for top function calls
Top_Function_Calls = 1 
; Scaling factor for peak memory usage in bytes
Peak_Memory_B = 1 
; Scaling factor for final memory usage in bytes
Final_Memory_B = 1 
; Scaling factor for CPU time in milliseconds
CPU_ms = 1 
; Scaling factor for source lines of code
SLOC = 1 
; Scaling factor for number of instructions executed
Instructions = 1 
