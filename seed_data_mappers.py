model_dict = {
    'random_data': "Random",
    'atheris_output': "Atheris",
    'gpt-3.5-turbo': "GPT-3",
    'gpt-4-turbo-preview': "GPT-4",
    'claude-3-opus-20240229': "Claude-Opus",
    'claude-instant-1.2': "Claude-Instant",
    'gemini-1.0-pro': "Gemini-1.0"
}

model_dirs = {
    "Random": 'random_data',
    "Atheris": 'atheris_output',
    "GPT-3": 'gpt-3.5-turbo/1.0',
    "GPT-4": 'gpt-4-turbo-preview/1.0',
    "Claude-Opus": 'claude-3-opus-20240229/1.0',
    "Claude-Instant": 'claude-instant-1.2/1.0',
    "Gemini-1.0": 'gemini-1.0-pro/1.0'
}

model_colors = {
    'gpt-3.5-turbo': "Red",
    'gpt-4-turbo-preview': "Green",
    'claude-3-opus-20240229': "Yellow",
    'claude-instant-1.2': "Purple",
    'gemini-1.0-pro': "Orange"
}


lookup = { 
    'ast.literal_eval': "ast.literal_eval(data)",
    'configparser.ConfigParser.read_string': "configparser.ConfigParser().read_string(data)",
    'django.core.serializers.deserialize':  "django.core.serializers.deserialize('json', data)",
    'email.message_from_string': "email.message_from_string(data)",
    'email.parser.BytesParser.parsebytes': "email.parser.BytesParser().parsebytes(data)",
    'email.parser.Parser.parsestr':  "email.parser.Parser().parsestr(data)",
    'email.utils.formataddr': "email.utils.formataddr(data)",
    'email.utils.parseaddr': "email.utils.parseaddr(data)",
    'email.utils.parsedate': "email.utils.parsedate(data)",
    'fnmatch.filter': "fnmatch.filter(['file1.txt', 'file2.txt'], data)",
    'ftplib.FTP': "ftplib.FTP(data)",
    'glob.glob': "glob.glob(data)",
    'html.parser.HTMLParser.feed': "html.parser.HTMLParser().feed(data)",
    'plistlib.dumps':  "plistlib.dumps(data)",
    'shlex.split': "shlex.split(data)",
    'smtplib.SMTP': "smtplib.SMTP(data)",
    'urllib.parse.parse_qs': "urllib.parse.parse_qs(data)",
    'cgi.parse_header': "cgi.parse_header(data)",
    'urllib.parse.parse_qsl': "urllib.parse.parse_qsl(data)",
    'json.loads': "json.loads(data)",
    'requests.get': "requests.get(data, params={'key': 'value'})",
    'yaml.load':     "yaml.load(data, Loader=yaml.FullLoader)",
    'exrex.getone': "exrex.getone(data)",
    'paramiko.SSHClient.connect':  "paramiko.SSHClient().connect(data, username='user', password='pass')",
    'scipy.optimize.minimize':     "scipy.optimize.minimize(data, x0, method='BFGS')",
    'wave.open, \'rb\')': "wave.open(io.BytesIO(data), 'rb')",
    'wave.open_rb': "wave.open(io.BytesIO(data), 'rb')",
    'sunau.open, \'rb\')': "sunau.open(io.BytesIO(data), 'rb')",
    'sunau.open_rb': "sunau.open(io.BytesIO(data), 'rb')",
    'pydoc.plain':  "pydoc.plain(pydoc.render_doc(data))",
    'PIL.Image.open)':"PIL.Image.open(io.BytesIO(data))",
    'PIL.Image.open':"PIL.Image.open(io.BytesIO(data))",
    'cgi.parse_multipart, pdict)':     "cgi.parse_multipart(io.BytesIO(data), pdict)",
    'cgi.parse_multipart_pdict':     "cgi.parse_multipart(io.BytesIO(data), pdict)",
    'construct.Struct.parse': 'construct.Struct.parse(data)',
    'geojson.loads': "geojson.loads(data)",
    'iptcinfo3.IPTCInfo)': "iptcinfo3.IPTCInfo(io.BytesIO(data))",
    'iptcinfo3.IPTCInfo': "iptcinfo3.IPTCInfo(io.BytesIO(data))",
    'mido.MidiFile)': "mido.MidiFile(file=io.BytesIO(data))",
    'mido.MidiFile': "mido.MidiFile(file=io.BytesIO(data))",
    'pandas.read_csv)': "pandas.read_csv(io.StringIO(data))",
    'pandas.read_csv': "pandas.read_csv(io.StringIO(data))",
    'phonenumbers.parse': "phonenumbers.parse(data, 'US')",
    'pydub.AudioSegment.from_file, format=\'mp3\')': "pydub.AudioSegment.from_file(io.BytesIO(data), format='mp3')",
    'pydub.AudioSegment.from_fileformatmp3': "pydub.AudioSegment.from_file(io.BytesIO(data), format='mp3')",
    'pyexcel.get_sheet':  "pyexcel.get_sheet(file_type='csv', file_content=data)",
    'pygments.lex)': "pygments.lex(data, pygments.lexers.PythonLexer())",
    'pygments.lex': "pygments.lex(data, pygments.lexers.PythonLexer())",
    'tablib.import_set': "tablib.import_set(data, format='csv')",   
    "chardet.detect" :"chardet.detect(data)",
    "ics.Calendar": "ics.Calendar(data)",
    "markdown.markdown": "markdown.markdown(data)",
    "rarfile.RarFile)": "rarfile.RarFile(io.BytesIO(data))",
    "rarfile.RarFile": "rarfile.RarFile(io.BytesIO(data))",
    "simplejson.loads": "simplejson.loads(data)",
    "xlrd.open_workbook": "xlrd.open_workbook(file_contents=data)",
    "yaml.safe_load": "yaml.safe_load(data)",
    "bs4.BeautifulSoup":"bs4.BeautifulSoup(data, 'html.parser')",
    "toml.loads":"toml.loads(data)",
    "markdown2.markdown": "markdown2.markdown(data)",
    "quopri.decodestring": "quopri.decodestring(data)",
    "html5lib.parse": "html5lib.parse(data)",
    "feedparser.parse": "feedparser.parse(data)"
}

min_coverages = {
            
# Config Parser     
 'json.loads': 4.355108877721943,
 'yaml.load': 23.302853976170685,
 'yaml.safe_load': 23.330562482682183,
 'django.core.serializers.deserialize': 16.41189748278522,
 'pandas.read_csv)': 5.870174942997235,
 'geojson.loads': 27.195467422096318,
 'configparser.ConfigParser.read_string': 7.614942528735632,
 'plistlib.dumps': 16.69793621013133,
 'toml.loads': 14.111006585136407,
 'simplejson.loads': 8.591674047829938,
 'tablib.import_set': 12.871287128712872,
 'pyexcel.get_sheet': 29.85185185185185,
# Binary
 'PIL.Image.open)': 17.69401638206303,
 "wave.open, 'rb')": 27.0,
 "sunau.open, 'rb')": 26.88821752265861,
 "pydub.AudioSegment.from_file, format='mp3')": 17.116630669546435,
 'mido.MidiFile)': 23.251748251748253,
 'rarfile.RarFile)': 27.8414517669532,
 'xlrd.open_workbook': 14.018114450391108,
 'ics.Calendar': 38.31417624521073,
 'iptcinfo3.IPTCInfo)': 24.737945492662472,
 'scipy.optimize.minimize': 2.9155342841338174,

# Network
 'ftplib.FTP': 19.12568306010929,
 'paramiko.SSHClient.connect': 20.477502295684115,
 'smtplib.SMTP': 21.78988326848249,
 'requests.get': 31.456491391344812,
 'urllib.parse.parse_qs': 0.7197121151539384,
 'urllib.parse.parse_qsl': 0.5597760895641744,
                  
# Network Format
 'cgi.parse_header': 16.477272727272727,
 'cgi.parse_multipart, pdict)': 30.492424242424242,
 'email.message_from_string': 11.74264850996645,
 'email.parser.BytesParser.parsebytes': 11.762384053680679,
 'email.parser.Parser.parsestr': 11.70317742253799,
 'email.utils.formataddr': 3.9471087428458653,
 'email.utils.parseaddr': 4.164199723702388,
 'email.utils.parsedate': 4.026050917702783,
 'bs4.BeautifulSoup': 15.602965105767492,
 'html.parser.HTMLParser.feed': 23.03030303030303,                 
 'html5lib.parse': 21.282140375260596,                
 'feedparser.parse': 24.869215291750503,
 'markdown.markdown': 16.35239567233385,
 'markdown2.markdown': 25.888958203368684,
# Text processing
 'ast.literal_eval': 0.7774538386783285,
 'chardet.detect': 40.24234693877551,
 'construct.Struct.parse': 30.09518477043673, 
 'exrex.getone': 13.428571428571429,
 'fnmatch.filter': 24.299065420560748,
 'glob.glob': 13.20754716981132,    
 'phonenumbers.parse': 24.879110251450676,
 'pydoc.plain)': 31.480397893504975,
 'pygments.lex)': 3.823984254182483,
 'quopri.decodestring': 10.843373493975903,
 'shlex.split': 23.574144486692017,
}


# Later fixes, unsure why these were missed the first time
#PIL.Image.open)
#cgi.parse_multipart, pdict)
#sunau.open, 'rb')
#wave.open, 'rb')
#iptcinfo3.IPTCInfo)
#mido.MidiFile)
#pandas.read_csv)
#pydub.AudioSegment.from_file, format='mp3')
#pygments.lex)
#rarfile.RarFile)


name_fixes = { 
    'PIL.Image.open)': 'PIL.Image.open',
    'cgi.parse_multipart, pdict)': 'cgi.parse_multipart',
    'configparser.ConfigParser.read_string': "configparser.read_string",
    'django.core.serializers.deserialize':  "django.core.deserialize",
    'wave.open, \'rb\')': "wave.open",
    'sunau.open, \'rb\')': "sunau.open",
    'pydoc.plain)':  "pydoc.plain",
    'iptcinfo3.IPTCInfo)': "iptcinfo3.IPTCInfo",
    'mido.MidiFile)': "mido.MidiFile",
    'pandas.read_csv)': "pandas.read_csv",
    "pydub.AudioSegment.from_file, format='mp3')": "pydub.AudioSegment.from_file",
    'pygments.lex)': "pygments.lex",
    "rarfile.RarFile)": "rarfile.RarFile",
    'email.parser.BytesParser.parsebytes': 'email.parser.parsebytes'
}


module_slocs = {
 'PIL': 14406,
 'ast': 1029,
 'bs4': 5531,
 'cgi': 528,
 'chardet': 1568,
 'configparser': 696,
 'construct': 3572,
 'email': 5067,
 'django': 69998,
 'fnmatch': 107,
 'ftplib': 549,
 'geojson': 353,
 'glob': 106,
 'html': 330,
 'html5lib': 5756,
 'ics': 1827,
 'iptcinfo3': 477,
 'json': 597,
 'markdown': 3235,
 'markdown2': 1603,
 'mido': 2288,
 'pandas': 247795,
 'paramiko': 8712,
 'phonenumber': 4136,
 'plistlib': 533,
 'pydub': 1852,
 'pyexcel': 2700,
 'pygments': 14226,
 'quopri': 166,
 'rarfile': 2094,
 'requests': 2149,
 'scipy': 166316,
 'shlex': 263,
 'simplejson': 2258,
 'smtplib': 514,
 'sunau': 331,
 'tablib': 1919,
 'toml': 1063,
 'urllib': 2501,
 'wave': 300,
 'xlrd': 4858,
 'yaml': 3609   
}

file_to_directory = {
 'file_cgi_parse_header.py': 'cgi.parse_header',
 'file_configparser_ConfigParser_read_string.py': 'configparser.ConfigParser.read_string',
 'file_construct_Struct_parse.py': 'construct.Struct.parse',
 'file_django_core_serializers_deserialize.py': 'django.core.serializers.deserialize',
 'file_email_message_from_string.py': 'email.message_from_string',
 'file_email_parser_BytesParser_parsebytes.py': 'email.parser.BytesParser.parsebytes',
 'file_email_parser_Parser_parsestr.py': 'email.parser.Parser.parsestr',
 'file_email_utils_formataddr.py': 'email.utils.formataddr',
 'file_email_utils_parseaddr.py': 'email.utils.parseaddr',
 'file_email_utils_parsedate.py': 'email.utils.parsedate',
 'file_exrex_getone.py': 'exrex.getone',
 'file_fnmatch_filter.py': 'fnmatch.filter',
 'file_ftplib_FTP.py': 'ftplib.FTP',
 'file_geojson_loads.py': 'geojson.loads',
 'file_glob_glob.py': 'glob.glob',
 'file_html5lib_parse.py': 'html5lib.parse',
 'file_html_parser_HTMLParser_feed.py': 'html.parser.HTMLParser.feed',
 'file_ics_Calendar.py': 'ics.Calendar',
 'file_iptcinfo3_IPTCInfo.py': 'iptcinfo3.IPTCInfo',
 'file_markdown_markdown.py': 'markdown.markdown',
 'file_mido_MidiFile.py': 'mido.MidiFile',
 'file_paramiko_SSHClient_connect.py': 'paramiko.SSHClient.connect',
 'file_pyexcel_get_sheet.py': 'pyexcel.get_sheet',
 'file_pygments_lex.py': 'pygments.lex',
 'file_bs4_BeautifulSoup.py': 'bs4.BeautifulSoup',
 'file_pandas_read_csv.py': 'pandas.read_csv',
 'file_phonenumbers_parse.py': 'phonenumbers.parse',
 'file_smtplib_SMTP.py': 'smtplib.SMTP',
 'file_PIL_Image_open.py': 'PIL.Image.open',
 'file_sunau_open_rb.py': 'sunau.open_rb',
 'file_ast_literal_eval.py': 'ast.literal_eval',
 'file_chardet_detect.py': 'chardet.detect',
 'file_yaml_load.py': 'yaml.load',
 'file_json_loads.py': 'json.loads',
 'file_markdown2_markdown.py': 'markdown2.markdown',
 'file_tablib_import_set.py': 'tablib.import_set',
 'file_wave_open_rb.py': 'wave.open_rb',
 'file_toml_loads.py': 'toml.loads',
 'file_rarfile_RarFile.py': 'rarfile.RarFile',
 'file_requests_get.py': 'requests.get',
 'file_shlex_split.py': 'shlex.split',
 'file_urllib_parse_parse_qsl.py': 'urllib.parse.parse_qsl',
 'file_urllib_parse_parse_qs.py': 'urllib.parse.parse_qs',
 'file_plistlib_dumps.py': 'plistlib.dumps',
 'file_pydub_AudioSegment_from_fileformatmp3.py': 'pydub.AudioSegment.from_fileformatmp3',
 'file_quopri_decodestring.py': 'quopri.decodestring',
 'file_simplejson_loads.py': 'simplejson.loads',
 'file_xlrd_open_workbook.py': 'xlrd.open_workbook',
 'file_yaml_safe_load.py': 'yaml.safe_load',
 'file_scipy_optimize.py': 'scipy.optimize.minimize',
 'file_cgi_parse_multipart_pdict.py': 'cgi.parse_multipart_pdict'
}